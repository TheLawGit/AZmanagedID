---
- name: Create Azure User-Assigned Managed Identity
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    res_namespace: "che-{{ res_name }}-devspaces"
    federated_name: "{{ res_name }}-federated"
    federated_subject: "system:serviceaccount:'{{ res_namespace }}':devspaces-sa"

  tasks:
    - name: login to AZ cli 
      shell: az login --service-principal --username "{{ CLIENT_ID }}" --password "{{ PASSWORD }}" --tenant "{{ TENANT }}"

    - name: Create Managed Identity in AZ 
      azure.azcollection.azure_rm_resource:
        resource_group: "{{ RESOURCE_GROUP }}"
        provider: ManagedIdentity
        resource_type: userAssignedIdentities
        resource_name: "{{ res_name }}"
        api_version: "2024-11-30"
        #location: "{{ location }}"
        state: present
        body: { "location": "eastus" }
      register: managed_identity_output

    - name: Get User Assigned Object Id
      shell: az identity show --name "{{ res_name }}" --resource-group "{{ RESOURCE_GROUP }}" --query principalId -o tsv
      register: object_id
    
    - name: Object_ID Variable
      debug:
        msg: "{{ object_id.stdout_lines }}"

    - name: Get User Assigned Client Id
      shell: az identity show --name "{{ res_name }}" --resource-group "{{ RESOURCE_GROUP }}" --query clientId -o tsv
      register: client_id

    - name: Client_ID Variable
      debug:
        msg: "{{ client_id.stdout_lines }}"

    - name: Ensure OpenShift project exists
      redhat.openshift.k8s:
        api_version: project.openshift.io/v1
        kind: Project
        state: present
        definition:
          metadata:
            name: '{{ res_namespace }}'
            annotations:
              openshift.io/description: created by ansible to use managed identities with devspaces

    - name: Set variable for Openshift Service Account
      ansible.builtin.set_fact:
        az_identity: "azure.workload.identity/{{ client_id.stdout_lines }}"

    - name: Create Openshift Service Account 
      redhat.openshift.k8s:
        state: present
        api_version: v1
        kind: ServiceAccount
        definition:
          metadata:
            name: devspaces-sa
            namespace: '{{ res_namespace }}'
            annotations:
              '{{ az_identity }}'
    
    - name: Create AZ Federated ID
      shell: az identity federated-credential create --name "{{ federated_name }}" --identity-name "{{ res_name }}" --resource_group "{{ RESOURCE_GROUP }}" --issuer "{{ ARO_OIDC_ISSUER }}" --subject "{{ federated_subject }}"